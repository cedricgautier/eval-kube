# Atelier 2 : Déploiement évolutif et résilient
# Ce fichier contient les ressources pour déployer une application web nginx scalable
# avec HPA et Ingress pour une application critique

---
# Création du namespace 'production' pour isoler les ressources
apiVersion: v1
kind: Namespace
metadata:
  name: production
  labels:
    purpose: atelier2
    
---
# Deployment pour déployer l'application web nginx
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-app-deploy
  namespace: production  # Déployé dans le namespace production
  labels:
    app: web-app
spec:
  replicas: 2  # Nombre initial de répliques pour la résilience
  selector:
    matchLabels:
      app: web-app
      env: cedric
  template:
    metadata:
      labels:
        app: web-app
        env: cedric
    spec:
      containers:
      - name: web-app  # Nom du conteneur
        image: nginx:1.28.0  # Image nginx spécifiée
        ports:
        - containerPort: 80  # Port exposé par nginx
          protocol: TCP
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"  # CPU request nécessaire pour HPA
          limits:
            memory: "128Mi"
            cpu: "200m"
        # Vérification que le conteneur est prêt
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10

---
# Service pour exposer l'application web
apiVersion: v1
kind: Service
metadata:
  name: web-app-svc
  namespace: production  # Service dans le même namespace
  labels:
    app: web-app
spec:
  type: ClusterIP  # Service interne au cluster
  selector:
    app: web-app  # Sélectionne les Pods avec le label app=web-app
    env: cedric   # Remplacer 'cedric' par votre prénom
  ports:
  - name: http
    port: 80        # Port standard HTTP pour Ingress
    targetPort: 80  # Port du conteneur nginx
    protocol: TCP

---
# HPA (Horizontal Pod Autoscaler) pour la scalabilité automatique
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: web-app-hpa
  namespace: production
  labels:
    app: web-app
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: web-app-deploy
  minReplicas: 1          # Minimum 1 Pod
  maxReplicas: 5          # Maximum 5 Pods comme spécifié
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50  # Maintenir l'utilisation CPU à 50%
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60    # Attendre 60s avant de scaler up
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300   # Attendre 5min avant de scaler down
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
# Ingress pour exposer l'application critique à l'extérieur
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-app-ingress
  namespace: production
  labels:
    app: web-app
  annotations:
    # Annotations communes pour la plupart des contrôleurs Ingress
    nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: web-app.local  # Domaine local pour les tests
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: web-app-svc
            port:
              number: 80
  # Configuration TLS optionnelle (à décommenter si certificat disponible)
  # tls:
  # - hosts:
  #   - web-app.local
  #   secretName: web-app-tls